/*
 * Copyright 2013 Grzegorz Ligas <ligasgr@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// --- changes to idea plugin ---
idea {
    module {
        iml {
            whenMerged { module ->
                removeIdeaJdkDependencies(module)
            }
            withXml {
                def module = it.asNode()
                changeModuleType(module)
                removeUnnecessaryComponent(module)
                appendRequiredComponent(module)
            }
        }
    }
}

idea.project.ipr {
    withXml {
        it.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
	def prm = it.node.component.find { it.@name == 'ProjectRootManager' }
	prm.@'project-jdk-name'= project.ext.ideaSdkName
	prm.@'project-jdk-type'='IDEA JDK'
	prm.attributes().remove('assert-jdk-15')
    }
}

// --- changes to idea plugin ---


def removeIdeaJdkDependencies(def module) {
    def deps = module.dependencies.findAll {!(it instanceof org.gradle.plugins.ide.idea.model.ModuleDependency) && it.classes.url[0].contains(ideaInstallationPath)}
    if (deps)
    	module.dependencies.removeAll(deps)
}

def changeModuleType(def module) {
    module.@type = 'PLUGIN_MODULE'
}

def removeUnnecessaryComponent(def module) {
    module.remove(module.component.find { it.@name == 'ModuleRootManager'})
}

def appendRequiredComponent(def module) {
    module.appendNode('component', ['name': 'DevKit.ModuleBuildProperties', 'url': 'file://$MODULE_DIR$/META-INF/plugin.xml'])
}
